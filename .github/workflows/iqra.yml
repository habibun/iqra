name: Iqra
on: [ push ]
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.5
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    strategy:
      matrix:
        php-versions: [8.0]
        node-version: [16.16]
    steps:
      - name: Setup Php and Composer
        uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
        with:
            php-version: ${{ matrix.php-versions }}
            extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, mysqli, pdo_pgsql, pgsql
      - name: Check PHP Version
        run: php -v
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Copy .env.local
        run: php -r "file_exists('.env.local') || copy('.env', '.env.local');"
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install Dependencies
        run:  composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn
      - name:  Install Symfony CLI
        run: |
          wget https://get.symfony.com/cli/installer -O - | bash
          mv /home/runner/.symfony5/bin/symfony /usr/local/bin/symfony
      - name: Check Symfony Requirements
        run: symfony check:requirements
      - name: Clear Symfony Cache
        run:  symfony console cache:clear
      - name: Coding Standards Checks
        run: make lint-all
      - name: Doctrine - Update Database Schema
        run: symfony console doctrine:schema:update --force
      - name: Doctrine - Validate the mappings
        run: symfony console doctrine:schema:validate

